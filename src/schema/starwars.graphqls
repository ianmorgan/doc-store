# The query type, represents all of the entry points into our object graph

type Query {

  character(id: ID!): Character

  droid(id: ID!): Droid

  human(id: ID!): Human

  humans(name : String!) : [Human]

}


# The episodes in the Star Wars trilogy
enum Episode {
  NEWHOPE
  EMPIRE
  JEDI
}


# A character from the Star Wars universe
interface Character {
  id: ID!
  name: String!

  # The friends of the character, or an empty list if they have none
  friends(first: Int, count: Int): [Character]

  # Build by convention as the count of 'friends' before any pagination has been applied.
  # so is the total possible 'Characters' available in the node
  friendsCount: Int

  # The movies this character appears in
  appearsIn: [Episode]!
}


# A humanoid creature from the Star Wars universe
type Human implements Character {

  id: ID!
  name: String!
  friends(first: Int, count: Int): [Character]
  friendsCount: Int

  appearsIn: [Episode]!

  homePlanet: String
}



# An autonomous mechanical character in the Star Wars universe
type Droid implements Character {

  id: ID!
  name: String!
  friends(first: Int, count: Int): [Character]
  friendsCount: Int

  appearsIn: [Episode]!

  primaryFunction: String

}

schema{query: Query}